version: '3.7'

services:
  api:
    container_name: 'shop_api'
    build:
      context: ./stroylux
      dockerfile: ./Dockerfile
      args:
        STATIC_URL: '/static/'
    ports:
      - 8000:8000
    restart: always
    depends_on:
      - pgbouncer
      - redis
    volumes:
      - static_volume:/app/static
      - ./stroylux/main/:/app/main:Z
      - ./stroylux/templates/:/app/templates:Z
      # prevents overshadowing of build-time assets
      - /app/main/static/assets
      - stroylux-media:/app/media
    command: gunicorn main.wsgi:application --timeout 300 --bind 0.0.0.0:8000
    env_file: ./stroylux/prod.env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backendssl.entrypoints=websecure"
      - "traefik.http.routers.backendssl.rule=Host(`stroyluxdrev.by`)&&PathPrefix(`/graphql/`) || Host(`stroyluxdrev.by`)&&PathPrefix(`/admin/`)"
      - "traefik.http.routers.backendssl.tls.certresolver=letsencrypt"

  storefront:
    container_name: "shop_storefront"
    build:
      context: ./storefront
      dockerfile: ./Dockerfile
      args:
        API_URI: "https://stroyluxdrev.by/graphql/"
        DASHBOARD_URL: "https://stroyluxdrev.by/dashboard/"
        STOREFRONT_URL: "https://stroyluxdrev.by/"
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.rule=Host(`stroyluxdrev.by`)&&PathPrefix(`/`)"
      - "traefik.http.routers.frontend.tls.certresolver=letsencrypt"

  dashboard:
    container_name: "shop_dashboard"
    build:
      context: ./dashboard
      dockerfile: ./Dockerfile
      args:
        API_URI: "https://stroyluxdrev.by/graphql/"
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.rule=Host(`stroyluxdrev.by`)&&PathPrefix(`/dashboard/`)"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"

  nginx:
    image: nginx
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/app/static
      - stroylux-media:/app/media
    labels:
      #      - "traefik.docker.network=proxy"
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.entrypoints=websecure"
      - "traefik.http.routers.nginx.rule=Host(`stroyluxdrev.by`)&&PathPrefix(`/static/`) || Host(`stroyluxdrev.by`)&&PathPrefix(`/media/`)"
      - "traefik.http.routers.nginx.tls.certresolver=letsencrypt"

  db:
    image: library/postgres:11.7-alpine
    ports:
      - 5432
    restart: always
    volumes:
      - stroylux-db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=stroylux
      - POSTGRES_PASSWORD=stroylux

  redis:
    image: library/redis:5.0-alpine
    ports:
      - 6379
    restart: always
    command: "redis-server"
    env_file: prod.env
    volumes:
      - stroylux-redis:/data

  worker:
    build:
      context: ./stroylux
      dockerfile: ./Dockerfile
      args:
        STATIC_URL: '/static/'
    command: celery -A stroylux worker --app=main.celeryconf:app --loglevel=error
    restart: always
    env_file: ./stroylux/prod.env
    depends_on:
      - redis
    volumes:
      - ./stroylux/main/:/app/main:Z,cached
      - ./stroylux/templates/:/app/templates:Z
      - stroylux-media:/app/media

#  smtp:
#      image: mailhog/mailhog:v1.0.0
#      container_name: smtp
#      restart: unless-stopped
#      ports:
#        - 8025:8025
#        - 1025:1025
#      labels:
#        - "traefik.enable=true"
#        - "traefik.http.routers.smtp.entrypoints=websecure"
#        - "traefik.http.services.smtp.loadbalancer.server.port=8025"
#        - "traefik.http.routers.smtp.rule=Host(`mailhog.docker.localhost`)"
#        - "traefik.http.routers.smtp.tls.certresolver=letsencrypt"
  proxy:
    image: "traefik:v2.2"
    restart: always
    container_name: "traefik"
    env_file:
      - prod.env
    command:
      - "--log.level=ERROR"
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesResolvers.letsencrypt.acme.dnsChallenge=true"
      - "--certificatesResolvers.letsencrypt.acme.dnsChallenge.provider=digitalocean"
      - "--certificatesresolvers.letsencrypt.acme.email=vladorton1@gmail.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
        
  pgbouncer:
    image: edoburu/pgbouncer:1.11.0
    restart: always
    ports:
      - 5432:5432
    depends_on:
      - db
    volumes:
      - ./stroylux/pgbouncer.ini:/etc/pgbouncer/pgbouncer.ini:ro
      - ./stroylux/userlist.txt:/etc/pgbouncer/userlist.txt:ro


volumes:
  stroylux-db:
  stroylux-redis:
  stroylux-media:
  static_volume:
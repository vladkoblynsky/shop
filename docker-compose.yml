version: '3.7'

services:
  api:
    ports:
      - 8000:8000
    build:
      context: ./stroylux
      dockerfile: ./Dockerfile
      args:
        STATIC_URL: '/static/'
    restart: unless-stopped
    depends_on:
      - redis
      - pgbouncer
#      - elasticsearch
    volumes:
      - static_volume:/app/static
      - ./stroylux/main/:/app/main:Z
      - ./stroylux/templates/:/app/templates:Z
      - /app/main/static/assets
      - ./stroylux/media/:/app/media:Z
    command: python manage.py runserver 0.0.0.0:8000
    env_file: ./stroylux/common.env

  storefront:
    container_name: "shop_storefront"
    build:
      context: ./storefront
      dockerfile: ./Dockerfile.dev
      args:
        API_URI: "http://localhost:8000/graphql/"
        DASHBOARD_URL: "http://localhost:9000/dashboard/"
        STOREFRONT_URL: "http://localhost:81/"
        SSR_API_URL: "http://api:8000/graphql/"
    depends_on:
      - api
    restart: unless-stopped
    command: ["/bin/sh", "-c", "pm2-runtime 'yarn run next-start-prod'"]

  nginx:
    image: nginx
    restart: unless-stopped
    volumes:
      - ./storefront/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - storefront
      - api
    ports:
      - 81:80

#  storefront:
#    build:
#      context: ./storefront
#      dockerfile: ./Dockerfile.dev
#    ports:
#      - 3000:3000
#    restart: unless-stopped
#    volumes:
#      - ./storefront/:/app:cached
#      - /app/node_modules/
#    command: npm start -- --host 0.0.0.0
#
#  dashboard:
#    build:
#      context: ./dashboard
#      dockerfile: ./Dockerfile.dev
#    ports:
#      - 9000:9000
#    restart: unless-stopped
#    volumes:
#      - ./dashboard/:/app:cached
#      - /app/node_modules/
#    command: npm start -- --host 0.0.0.0

  db:
    image: library/postgres:11.7-alpine
    ports:
      - 5432
    restart: unless-stopped
    volumes:
      - stroylux-db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=stroylux
      - POSTGRES_PASSWORD=stroylux

  redis:
    image: library/redis:5.0-alpine
    ports:
      - 6379:6379
    restart: unless-stopped
    volumes:
      - stroylux-redis:/data

  worker:
    build:
      context: ./stroylux
      dockerfile: ./Dockerfile
      args:
        STATIC_URL: '/static/'
    command: celery -A stroylux worker --app=main.celeryconf:app --loglevel=info
    restart: unless-stopped
    env_file: ./stroylux/common.env
    depends_on:
      - redis
    volumes:
      - ./stroylux/main/:/app/main:Z,cached
      - ./stroylux/templates/:/app/templates:Z
      - ./stroylux/media/:/app/media:Z

  smtp:
    image: mailhog/mailhog:v1.0.0
    container_name: smtp
    restart: unless-stopped
    ports:
      - 8025:8025
      - 1025:1025

  pgbouncer:
    image: edoburu/pgbouncer:1.11.0
    restart: unless-stopped
    ports:
      - 5432:5432
    depends_on:
      - db
    volumes:
      - ./stroylux/pgbouncer.ini:/etc/pgbouncer/pgbouncer.ini:ro
      - ./stroylux/userlist.txt:/etc/pgbouncer/userlist.txt:ro


volumes:
  stroylux-db:
  stroylux-redis:
  static_volume:
  stroylux-media: